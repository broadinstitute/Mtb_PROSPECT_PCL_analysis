function out = rtable(inp, varargin)

%% Parse arguments
config = struct(...
    'name', {'--outfmt', '--numhead', '--lowerhdr', '--detect_numeric', ...
    '--ignore_hash', '--comment_style','--delimiter','--verbosity'},...
    'default', {'record', 1, true, true, true,'#','\t',1},...
    'type',{'char','single','logical','logical','logical','char','char','single'},...
    'help', {'Output format', ...
        'Number of lines to skip',...
        'Convert header to lowercase',...
        'Convert numeric fields to double',...
        'Ignore fields that begin with hash',...
        'Symbol(s) designating lines to ignore',...
        'Field delimiter (default \t)',...
        'Level of verbosity: 0, 1, or 2'});
    
opt = struct('prog', mfilename, 'desc', 'Parse a tsv file',...
    'undef_action', 'ignore');

[args, help_flag] = mortar.common.ArgParse.getArgs(config, opt, varargin{:});

if help_flag
   return
end

if args.verbosity>0
    parse_tbl_verbosity = true;
else
    parse_tbl_verbosity = false;
end

if ischar(inp)
	assert(exist(inp, 'file')~=0, 'File: %s could not be found', inp)

	out = parse_tbl(inp,'outfmt',args.outfmt,'numhead',args.numhead,...
        'lowerhdr',args.lowerhdr,'detect_numeric',args.detect_numeric,...
        'ignore_hash',args.ignore_hash,'comment_style',args.comment_style,...
        'delimiter',args.delimiter,'verbose',parse_tbl_verbosity);
    out = struct2table(out);
    if args.verbosity > 1
        gcthd2idx(out.Properties.VariableNames')
    end
else
	error('Input to should be a string')
end
